export const USER_MESSAGES = {
  VALIDATION_ERROR: 'Validation error',
  NAME_IS_REQUIRED: 'Name is required',
  NAME_MUST_BE_A_STRING: 'Name must be a string',
  NAME_LENGTH_MUST_BE_FROM_1_TO_100: 'Name length must be from 1 to 100',
  PHONE_IS_REQUIRED: 'Phone is required',
  PHONE_ALREADY_EXISTS: 'Phone already exists',
  PHONE_IS_WRONG_FORMAT: 'Phone is wrong format',
  PHONE_MUST_BE_A_STRING: 'Phone must be a string',
  EMAIL_ALREADY_EXISTS: 'Email already exists',
  EMAIL_IS_REQUIRED: 'Email is required',
  EMAIL_IS_INVALID: 'Email is invalid',
  PASSWORD_IS_REQUIRED: 'Password is required',
  PASSWORD_MUST_BE_A_STRING: 'Password must be a string',
  PASSWORD_LENGTH_MUST_BE_FROM_6_TO_50: 'Password length must be from 6 to 50',
  PASSWORD_MUST_BE_STRONG:
    'Password must be 6-50 characters long and contain at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 symbol',
  CONFIRM_PASSWORD_IS_REQUIRED: 'Confirm password is required',
  CONFIRM_PASSWORD_MUST_BE_A_STRING: 'Confirm password must be a string',
  CONFIRM_PASSWORD_LENGTH_MUST_BE_FROM_6_TO_50: 'Confirm password length must be from 6 to 50',
  CONFIRM_PASSWORD_MUST_BE_STRONG:
    'Confirm password must be 6-50 characters long and contain at least 1 lowercase letter, 1 uppercase letter, 1 number, and 1 symbol',
  CONFIRM_PASSWORD_MUST_BE_THE_SAME_AS_PASSWORD: 'Confirm password must be the same as password',
  DATE_OF_BIRTH_MUST_BE_ISO8601: 'Date of birth must be ISO8601',
  GENDER_MUST_BE_ONE_OF_THE_FOLLOWING_VALUES: 'Gender must be one of the following values',
  USER_NOT_FOUND: 'User not found',
  LOGIN_SUCCESS: 'Login success',
  LOGOUT_SUCCESS: 'Logout success',
  REGISTER_SUCCESS: 'Register success',
  EMAIL_OR_PASSWORD_IS_INCORRECT: 'Email or password is incorrect',
  PHONE_OR_PASSWORD_IS_INCORRECT: 'Phone or password is incorrect',
  ACCESS_TOKEN_IS_REQUIRED: 'Access token is required',
  REFRESH_TOKEN_IS_REQUIRED: 'Refresh token is required',
  REFRESH_TOKEN_IS_INVALID: 'Refresh token is invalid',
  USED_REFRESH_TOKEN_OR_NOT_EXIST: 'Used refresh token or not exist',
  REFRESH_TOKEN_SUCCESS: 'Refresh token success',
  GET_PROFILE_SUCCESS: 'Get profile success',
  UPDATE_PROFILE_SUCCESS: 'Update profile success',
  NAME_LENGTH_MUST_BE_FROM_1_TO_50: 'Name length must be from 1 to 50',
  WEIGHT_MUST_BE_A_NUMBER: 'Weight must be a number',
  BLOOD_GROUP_MUST_BE_A_STRING: 'Blood group must be a string',
  AVATAR_MUST_BE_A_STRING: 'Avatar must be a string',
  AVATAR_LENGTH_MUST_BE_LESS_THAN_200: 'Avatar length must be less than 200',
  AVATAR_MUST_BE_A_URL: 'Avatar must be a URL',
  WEIGHT_MUST_BE_AN_INTEGER_BETWEEN_1_AND_500: 'Weight must be an integer between 1 and 500',
  OLD_PASSWORD_NOT_MATCH: 'Old password not match',
  CHANGE_PASSWORD_SUCCESS: 'Change password success',
  USER_NOT_AUTHORIZED: 'User not authorized'
} as const

export const BLOOD_MESSAGES = {
  CREATE_BLOOD_GROUP_SUCCESS: 'Create blood group success',
  BLOOD_GROUP_NOT_FOUND: 'Blood group not found',
  BLOOD_GROUP_ALREADY_EXIST: 'Blood group already exists',
  BLOOD_GROUP_MUST_BE_A_STRING: 'Blood group must be a string',
  BLOOD_GROUP_IS_REQUIRED: 'Blood group is required',
  BLOOD_GROUP_IS_INVALID: 'Blood group is invalid',
  GET_BLOOD_COMPONENTS_SUCCESS: 'Get blood components success',
  GET_BLOOD_GROUPS_SUCCESS: 'Get blood groups success',
  CREATE_BLOOD_COMPONENT_SUCCESS: 'Create blood component success',
  BLOOD_COMPONENT_NOT_FOUND: 'Blood component not found',
  BLOOD_COMPONENT_ALREADY_EXIST: 'Blood component already exists',
  BLOOD_COMPONENT_MUST_BE_A_STRING: 'Blood component must be a string',
  BLOOD_COMPONENT_IS_REQUIRED: 'Blood component is required',
  BLOOD_COMPONENT_IS_INVALID: 'Blood component is invalid'
} as const

export const DONATION_MESSAGES = {
  REGISTRATION_SUCCESS: 'Registration success',
  REGISTRATION_MUST_BE_A_STRING: 'Registration must be a string',
  REGISTRATION_IS_REQUIRED: 'Registration is required',
  REGISTRATION_IS_INVALID: 'Registration is invalid',
  USERID_IS_INVALID: 'Invalid user ID',
  GET_DONATION_REGISTRATIONS_SUCCESS: 'Get donation registrations success',
  GET_DONATION_REGISTRATION_SUCCESS: 'Get donation registration success',
  UPDATE_DONATION_REGISTRATION_SUCCESS: 'Update donation registration success',
  DELETE_DONATION_REGISTRATION_SUCCESS: 'Delete donation registration success',
  DONATION_REGISTRATION_NOT_FOUND: 'Donation registration not found',
  DONATION_REQUEST_PROCESS_NOT_FOUND: 'Donation request process not found',
  DONATION_REGISTRATION_ID_INVALID: 'Invalid donation registration ID',
  GET_DONATION_REQUEST_PROCESS_SUCCESS: 'Get donation requests process success',
  DONATION_REQUEST_PROCESS_ID_INVALID: 'Invalid donation request process ID',
  UPDATE_DONATION_REQUEST_PROCESS_SUCCESS: 'Update donation request process success',
  START_DATE_DONATION_IS_INVALID: 'Start date donation is invalid',
  USER_ID_IS_REQUIRED: 'User ID is required',
  USER_ID_IS_INVALID: 'User ID is invalid',
  STATUS_IS_REQUIRED: 'Status is required',
  STATUS_IS_INVALID: 'Status is invalid',
  GET_ALL_DONATION_REGISTRATIONS_SUCCESS: 'Get all donation registrations success',
  STATUS_MUST_BE_A_STRING: 'Status must be a string',
  START_DATE_DONATION_IS_REQUIRED: 'Start date donation is required',
  GET_ALL_DONATION_REQUEST_PROCESS_SUCCESS: 'Get all donation requests process success',
  VOLUME_COLLECTED_IS_REQUIRED: 'Volume collected is required',
  VOLUME_COLLECTED_MUST_BE_A_NUMBER: 'Volume collected must be a number',
  VOLUME_COLLECTED_MUST_BE_POSITIVE: 'Volume collected must be positive',
  DONATION_DATE_IS_INVALID: 'Donation date is invalid',
  DESCRIPTION_MUST_BE_A_STRING: 'Description must be a string',
  DESCRIPTION_LENGTH_MUST_BE_LESS_THAN_500: 'Description length must be less than 500'
} as const

export const HEALTH_CHECK_MESSAGES = {
  GET_ALL_HEALTH_CHECKS_SUCCESS: 'Get all health checks success',
  HEALTH_CHECK_NOT_FOUND: 'Health check not found',
  HEALTH_CHECK_ALREADY_EXIST: 'Health check already exists',
  HEALTH_CHECK_MUST_BE_A_STRING: 'Health check must be a string',
  HEALTH_CHECK_IS_REQUIRED: 'Health check is required',
  HEALTH_CHECK_IS_INVALID: 'Health check is invalid',
  CREATE_HEALTH_CHECK_SUCCESS: 'Create health check success',
  UPDATE_HEALTH_CHECK_SUCCESS: 'Update health check success',
  DELETE_HEALTH_CHECK_SUCCESS: 'Delete health check success',
  HEALTH_CHECK_ID_INVALID: 'Invalid health check ID',
  HEALTH_CHECK_NAME_IS_REQUIRED: 'Health check name is required',
  HEALTH_CHECK_NAME_MUST_BE_A_STRING: 'Health check name must be a string',
  HEALTH_CHECK_NAME_LENGTH_MUST_BE_LESS_THAN_100: 'Health check name length must be less than 100',
  HEALTH_CHECK_DESCRIPTION_MUST_BE_A_STRING: 'Health check description must be a string',
  HEALTH_CHECK_DESCRIPTION_LENGTH_MUST_BE_LESS_THAN_500: 'Health check description length must be less than 500',
  HEALTH_CHECK_STATUS_MUST_BE_A_STRING: 'Health check status must be a string',
  HEALTH_CHECK_STATUS_IS_REQUIRED: 'Health check status is required',
  HEALTH_CHECK_STATUS_MUST_BE_ONE_OF_THE_FOLLOWING_VALUES: 'Health check status must be one of the following values',
  HEALTH_CHECK_STATUS_VALUES: ['pending', 'in_progress', 'completed', 'failed'],
  GET_HEALTH_CHECK_BY_USER_ID_SUCCESS: 'Get health check by user ID success',
  GET_HEALTH_CHECK_BY_USER_ID_NOT_FOUND: 'Health check by user ID not found',
  WEIGHT_IS_REQUIRED: 'Weight is required',
  WEIGHT_MUST_BE_A_NUMBER: 'Weight must be a number',
  WEIGHT_MUST_BE_POSITIVE: 'Weight must be positive',
  TEMPERATURE_IS_REQUIRED: 'Temperature is required',
  TEMPERATURE_MUST_BE_POSITIVE: 'Temperature must be positive',
  TEMPERATURE_MUST_BE_A_NUMBER: 'Temperature must be a number',
  HEART_RATE_IS_REQUIRED: 'Heart rate is required',
  HEART_RATE_MUST_BE_POSITIVE: 'Heart rate must be positive',
  HEART_RATE_MUST_BE_A_NUMBER: 'Heart rate must be a number',
  DIASTOLIC_BLOOD_PRESSURE_IS_REQUIRED: 'Diastolic blood pressure is required',
  DIASTOLIC_BLOOD_PRESSURE_MUST_BE_POSITIVE: 'Diastolic blood pressure must be positive',
  DIASTOLIC_BLOOD_PRESSURE_MUST_BE_A_NUMBER: 'Diastolic blood pressure must be a number',
  SYSTOLIC_BLOOD_PRESSURE_IS_REQUIRED: 'Systolic blood pressure is required',
  SYSTOLIC_BLOOD_PRESSURE_MUST_BE_POSITIVE: 'Systolic blood pressure must be positive',
  SYSTOLIC_BLOOD_PRESSURE_MUST_BE_A_NUMBER: 'Systolic blood pressure must be a number',
  HEMOGLOBIN_IS_REQUIRED: 'Hemoglobin is required',
  HEMOGLOBIN_MUST_BE_POSITIVE: 'Hemoglobin must be positive',
  HEMOGLOBIN_MUST_BE_A_NUMBER: 'Hemoglobin must be a number',
  DESCRIPTION_MUST_BE_A_STRING: 'Description must be a string',
  DESCRIPTION_LENGTH_MUST_BE_LESS_THAN_500: 'Description length must be less than 500',
  UNDERLYING_CONDITIONS_MUST_BE_AN_ARRAY: 'Underlying health conditions must be an array',
  UNDERLYING_CONDITIONS_INVALID_VALUES: 'Underlying health conditions must contain valid values'
} as const

export const BLOG_MESSAGES = {
  CREATE_BLOG_SUCCESS: 'Create blog success',
  BLOG_NOT_FOUND: 'Blog not found',
  BLOG_ALREADY_EXIST: 'Blog already exists',
  BLOG_MUST_BE_A_STRING: 'Blog must be a string',
  BLOG_IS_REQUIRED: 'Blog is required',
  TITLE_IS_REQUIRED: 'Title is required',
  CONTENT_IS_REQUIRED: 'Content is required',
  IMAGE_IS_REQUIRED: 'Image is required',
  AUTHOR_IS_REQUIRED: 'Author is required',
  TITLE_MUST_BE_A_STRING: 'Title must be a string',
  CONTENT_MUST_BE_A_STRING: 'Content must be a string',
  IMAGE_MUST_BE_A_STRING: 'Image must be a string',
  AUTHOR_MUST_BE_A_STRING: 'Author must be a string',
  GET_ALL_BLOGS_SUCCESS: 'Get all blogs success',
  GET_BLOG_SUCCESS: 'Get blog success',
  UPDATE_BLOG_SUCCESS: 'Update blog success',
  DELETE_BLOG_SUCCESS: 'Delete blog success',
  IMAGE_MUST_BE_A_URL: 'Image must be a URL'
} as const
